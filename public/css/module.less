/* Default font settings */
h1 {
    font-size: 1em;
}

h1 a {
    color: inherit;
    float: right;
    font-weight: normal;
}

h1 a:focus {
    outline: none;
}

div.bp {
  font-size: 0.82em;
  margin-bottom: 4px;
}

.simulation div.bp {
    border-right: 1em solid @colorCriticalHandled;
    padding-right: 1em;
    background: white;
}

table.bp {
    /* Business process table styling starts here */
    width: 100%;
    margin: 0;
    padding: 0;
    color: #0a0a0a;
    border-collapse: collapse;
    border-spacing: 0;
    box-sizing: border-box;
    font-size: 1em;
    font-weight: normal;

    /* Reset all paddings and margins, just to be on the safe side */
    th, td {
        padding: 0;
        margin: 0;
    }

    /* Left outer margin on nested BPs */
    table.bp {

        width: 99.6%;
        margin-left: .4%;
        margin-top: 4px;

    }
}

/* We try our best to avoid flickering */
table.bp th, table.bp td a {
/* SHIT margin-bottom: 5px; */
}

table.bp th {
  font-weight: bold;
}

/* END of font settings */

/* No focus outline on our links, look ugly */
table.bp a:focus {
    outline: none;
}

/* No link underlining */
table.bp a, table.bp a:hover {
  text-decoration: none;
}

/* White font for all hovered objects */
table.bp.hovered {
    color: white;
}

table.bp.handled.hovered {
    color: #0a0a0a;
}

table.bp a {
    color: inherit;
}

/* Show a pointer when hovering th, highlighting is JS-triggered */
table.bp tr th   {
    cursor: pointer;
}

/* Expand / collapse styling */
table.bp.process {

    position: relative;

    > tbody > tr:first-child > td:before {
        content: '\e81d';
        font-family: ifont;
        position: absolute;
        font-size: 1.5em;
        margin-left: -0.8em;
        -webkit-transition: -webkit-transform 0.3s;
        -moz-transition: -moz-transform 0.3s;
        -o-transition: -o-transform 0.3s;
        transition: transform 0.3s;
    }

    &.collapsed {

        > tbody > tr:first-child > td:before {
            -webkit-transform:rotate(-90deg);
            -moz-transform:rotate(-90deg);
            -o-transform:rotate(-90deg);
            .rotate(360deg);
        }

        table.bp, th span {
            display: none;
        }
    }
}

table.bp th > a, table.bp td > a {
    display: block;
    text-decoration: none;
}

table.bp span.op {
    width: 1.5em;
    min-height: 1.5em;
    margin-top: 1em;
    display: block;
    line-height: 2em;
    transform: rotate(-90deg);
    -moz-transform: rotate(-90deg);
}

table.bp .icon {
    float: left;
    margin-top: 0.4em;
    margin-right: 0.4em;
}

table.bp.node.service td:before {
    font-family: ifont;
    z-index: 10;
    font-size: 1.25em;
    content: '\e840';
    position: absolute;
    margin-left: 1.25em;
    margin-top: 0.25em;
}

table.bp.node.host td:before {
    font-family: ifont;
    z-index: 10;
    font-size: 1.25em;
    content: '\e866';
    position: absolute;
    margin-left: 1.25em;
    margin-top: 0.25em;
}

/* Border defaults */
table.bp {
    border-width: 0;
    border-style: solid;
    border-color: transparent;
}

table.bp tr, table.bp tbody, table.bp th, table.bp td, table.bp.node td > a {
    border-width: 0;
    border-style: inherit;
    border-color: inherit;
}

table.bp th {
    border-left-width: 0.5em;
    width: 1.5em;
}

table.bp.node td > a {
    border-left-width: 0.5em;
}

/* Operator: upper line */
table.bp.operator > tbody > tr:first-child > * {
    border-top-width: 1px;
    border-top-style: dotted;
}
table.bp.operator.hovered > tbody > tr:first-child > * {
    border-top-style: solid;
}

table.bp {
    &.ok               { border-color: @colorOk; }
    &.warning          { border-color: @colorWarning; }
    &.warning.handled  { border-color: @colorWarningHandled; }
    &.critical         { border-color: @colorCritical; }
    &.critical.handled { border-color: @colorCriticalHandled; }
    &.unknown          { border-color: @colorUnknown; }
    &.unknown.handled  { border-color: @colorUnknownHandled; }
    &.hovered {
        &.ok > tbody > tr > {
            th, td > a { background-color: @colorOk; }
        }
        &.warning > tbody > tr > {
            th, td > a { background-color: @colorWarning; }
        }
        &.warning.handled > tbody > tr {
            > th, > td > a { background-color: @colorWarningHandled; }
        }
        &.critical > tbody > tr > {
            th, td > a { background-color: @colorCritical; }
        }
        &.critical.handled > tbody > tr > {
            th, td > a { background-color: @colorCriticalHandled; }
        }
        &.unknown > tbody > tr > {
            th, td > a { background-color: @colorUnknown; }
        }
        &.unknown.handled > tbody > tr > {
            th, td > a { background-color: @colorCUnknownHandled; }
        }
    }
}

table.bp table.bp table.bp table.bp {
    font-size: 0.9em;
}
table.bp table.bp table.bp table.bp table.bp {
    font-size: 1em;
}
/* Transitions */
table.bp {

    // That's ugly, I know
    .transition(@val1, @val2) {
        transition: @val1, @val2;
        -moz-transition: @val1, @val2;
        -o-transition: @val1, @val2;
        -webkit-transition: @val1, @val2;
    }
    > tbody > tr > td > a, > tbody > tr > th {
        // Fade out
        .transition(color 0.5s 0.1s step-start,
         background-color 0.5s 0.1s ease-out
        );
    }

    &.hovered > tbody > tr {
        > td > a, > th {
            // Fade in
            .transition(color 0.0s 0.0s step-start,
             background-color 0.0s 0.0s ease-out
            );
        }
    }
}


